# master-deploy-work.yml
name: main

on:
  push:
    branches:
      - main # master 브랜치에서 push 이벤트가 일어났을 때 실행
  pull_request:
    branches:
      - main # master 브랜치에서 pull_request 이벤트가 일어났을 때 실행

# 해당 Workflow의 하나 이상의 Job 목록입니다.
jobs:
   # Job 이름으로, build라는 이름으로 Job이 표시됩니다.
  build:
  # Runner가 실행되는 환경을 정의하는 부분입니다.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@main

      - name: Generate Environment Variables File for Production # Github Repository Secrets를 통해 변수 파일을 생성
        run: |
          echo "REACT_APP_SERVER=$REACT_APP_SERVER" >> .env
          echo "REACT_APP_KAKAOJSKEY=$REACT_APP_KAKAOJSKEY" >> .env
          echo "REACT_APP_KAKAORESTKEY=$REACT_APP_KAKAORESTKEY" >> .env
        env:
          REACT_APP_SERVER: ${{ secrets.REACT_APP_SERVER }}
          REACT_APP_KAKAOJSKEY: ${{ secrets.REACT_APP_KAKAOJSKEY }}
          REACT_APP_KAKAORESTKEY: ${{ secrets.REACT_APP_KAKAORESTKEY }}

      # 실행 속도를 빠르게 하기 위해 설치된 Node 모듈을 캐시하도록 설정합니다.
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install Dependencies
        run: yarn

      - name: Build
        run: yarn build
        env:
          CI: ""

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_IAM_MANAGER_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_MANAGER_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --recursive \
          --region ap-northeast-2 \
          build s3://clipspromise.com
